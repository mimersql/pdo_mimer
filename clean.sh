#!/bin/sh
# utility to remove the test files generated by failing tests

unset mpdt

usage() {
  echo "usage: clean -Mpmdt || clean -a (clean all)"
  echo "    [-M make clean] [-p phpize --clean] [-m clean more files]"
  echo "    [[-d verbose] -t clean tests directory]"
  exit 0
}

dbgprint() {
  if (( d > 0 )); then
    echo -e "${1}"
  fi
}

is_all() {
  if [ "${1}" = "-a" ] || [ "${1}" = "--all" ] || [ "${1}" = "all" ]; then
    return 0
  fi

  return 1
}

is_help() {
  if [ "${1}" = "-h" ] || [ "${1}" = "--help" ] || [ "${1}" = "help" ]; then
    return 0
  fi

  return 1
}

clean_tests_dir() {
  local CLEAN_FILES=('diff' 'log' 'out' 'exp' 'php' 'sh' 'mem')
  (
    cd tests || exit
    echo "Cleaning tests directory... "
    dbgprint ""

    counter=0
    for i in *; do
      ext="${i##*.}"
      if [[ -f "${i}" && "${CLEAN_FILES[*]}" =~ ${ext} ]]; then
        ((counter++))
        dbgprint "\ttests/${i}"
        rm "${i}"
      fi
    done
    dbgprint ""
    echo "Removed ${counter} files"
  )
}

clean() {
  if [ -n "${make_clean}" ]; then [[ -f "Makefile" ]] && make clean; fi
  if [ -n "${phpize_clean}" ]; then  phpize --clean; fi
  if [ -n "${more_clean}" ]; then  (rm "*.dep *.loT *~" 2> /dev/null); ([[ -d "include" ]] && rm -r "include"); fi
  if [ -n "${clean_tests}" ]; then clean_tests_dir; fi
}

clean_all() {
    make_clean=1
    phpize_clean=1
    more_clean=1
    clean_tests=1
    clean
    exit 0
}

for arg in "${@}"; do :
  if is_help "${arg}"; then
    usage
  fi
done

for arg in "${@}"; do :
  if is_all "${arg}"; then
    clean_all
  fi
done

clean

while getopts aMpmdt opt; do
  case ${opt} in
    a) clean_all      ;;
    M) make_clean=1   ;;
    p) phpize_clean=1 ;;
    m) more_clean=1   ;;
    d) (( d++ ))      ;;
    t) clean_tests=1  ;;
    *) usage          ;;
  esac
done


